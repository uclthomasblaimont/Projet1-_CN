pour la 2.1.1.1 

Dans mon script j'ai codé la fonction extract_dns_queries qui renvoit un set des domaines résolus.
Je peux voir qu'il y a plusieurs sortes de domaines ; comme par exemple les domaines de vérification d'adresse ,
le domaine de firefox mon naviguateur et le domaine de Firefox.
Il y a aussi d'autres domaines mais ce sont les liens favoris qui ont été téléchargé au lancement de Firefox.

Dans la situation wifi_connection au compte Google je vois quelques traces avec le protocole ARP.

pour la 2.1.1.2
Je lance la commande "dig NS dropbox" et je vois que les serveurs autoritatifs (ns-1162.awsdns-17.org,
ns-564.awsdns-06.net) sont stockés chez Amazon dans la majorité des cas , car le reste c est Google.



pour la 2.1.1.3 :

 j'ai lancé la commande whois dropbox.com  pour interroger les noms de domains et cela m'a révelé à quelles entreprises
 ils appartiennent
 J'ai eu comme output que le domaine est en enregistrer chez MarkMonitor Inc.
 Il y a plusieurs status de domaines pour protéger les noms de domaines .

Dropbox utilise Amazon Web Services (awsdns) pour la gestion du DNS de ce domaine.
Ils utilisent les services d'infrastructure d'Amazon pour une partie de leur réseau



autres infos à voir si je dois les mettre dans le rapport mais :
DNSSEC : c 'est une sécurité supplémentaire qui asssure l'authenticité de la réponse DNS ( elle n'est pas utilisé ici)


pour la question 2.1.1.4:

METTRE L'IMAGE DANS LE RAPPORT
et expliquer les résultats




pour la question 2.1.1.5:

pour répondre à cette question on peut se fier au graphe ci dessus.
Mais pour choisir la version de l'adresse pour l'application il faut que plusieurs facteurs entrent en jeu.
La compatibilité la performance et la disponibilité réseau.
D'après le graphe dropbox utilise plus les adresses IPv6 que de IPv4. S'il y a un problème avec les adresses IPv6 ,
ils peuvent se replier sur les adresses IPv4 par défaut
plus d'infos via le lien https://help.dropbox.com/installs/system-requirements



pour la question 2.1.1.6 : Les requêtes contiennent elles des records additionnels ? Le cas échéant, à quoi servent-ils ?

Oui , j'ai 561 records additionnels , on a récupéré les paquets additionnels avec une fonction.
Il y a une activité réseau diversifiée , car on fait l'expérience sur le web (utilisations de services en ligne et des vérifications de sécurité.
Il y a plusieurs paquets qui sont liés à la transmission d'infos DNS, mais aussi des services de sécurité
(OCSP :"Le protocole OCSP (Online Certificate Status Protocol) est une alternative à la liste de révocation des certificats (CRL) et est utilisé pour vérifier si un certificat numérique est valide ou s'il a été révoqué." source : https://www.fortinet.com/resources/cyberglossary/ocsp).
Pour afficher les paquets OCSP de sécurité,j'ai filtré avec la commande "ocsp".
On peut avoir d'autres paquets pour d'autres usages.

pour la question 2.1.1.7 : Observez-vous des comportements DNS inattendus :
Oui j'ai plusieurs requêtes qui apparaissent plusieurs fois : par exemple "dropbox.com" , "detectportal.firefox.com" et "ocsp.digicert"
C est un comportement de ressai en cas de non réception de réponse. Il y aussi le cas où la réponse n'arrive pas au client
J'ai un autre comportement inattendu , les enregistrements de réponses de mes paquets ("Answer" dans le paquet) m'affichent "None"
Il y a peut être eu un problème de connectivité DNS.

pour la question 2.1.2.1 :

Oui , elle utilise la Technique STUN (Session Traversa Utilites for NAT) : protocle qui accorde
aux clients de découvrir leur adresse publique.
Dans mon filtrage j'ai 4 paquets qui ressortent (n°1346 n°1389 n°1397 n°1418).
On va analyser les 4 paquets:
le premier paquet est une requête de liaison STUN :elle initie la découverte de l'adresse publique et du type de NAT.
la requête est envoyée à un serveur STUN externe
le deuxième paquet est la réponse de liaison STUN : elle contient une adresse publique '87.64.216.32' avec le port '46366'
qui ont été attribués par le NAT.
les troisième et quatrième paquets : c'est même procédée que les 2 premiers sauf qu'ici on utilise des adresses IPv6
Encore une fois nous pouvons voir que l'application DROPBOX utilise bien des adressers IPv4 et IPv6.

pour la question 2.1.2.2:

Après la résolution  des adresses IP en noms de domaines grâce à une fonction python et le filtre :

dns && (ip.addr == 192.168.1.61 || ipv6.addr == 2a02:a03f:c028:e00:75eb:339e:53dc:eb6) && (dns.flags.response == 1 || dns.flags.response == 0)

J'ai remarqué qu il y a plusiers types d'adresses :

Plusieurs adresses IP sont résolues en noms de domaine qui sont associés à des CDN (https://www.cloudflare.com/learning/cdn/what-is-a-cdn/)
C'est un réseau de diffusion de contenu , il permet de distribuer du contenus rapidement sur Internet.
Les adresses trouvés associés sont 'cloudfront.net'(Amazon CloudFront) et 'googleusercontent.com' (Google Cloud)

pour la question 2.1.3 .1 :

Pour la navigation web  : on utilise le protocole TCP . Il faut un transfert de données fiable et ordonné pour charger
correctement les page web , ce que TCP fournit.
HTTPS utilise également TCP , avec une couche de sécurtié SSL/TLS

 Il y a aussi des paquets  UDP que DNS utilise :  Pour les requêtes simples qui peuvent tenir dans un seul paquet de réponse .
 Par exemple dans la situtation de connection au compte google j'ai des paquets de requêtes de connection google
 Pour des paquets plus complexes TCP est souvent utilisé.

 Pour la question 2.1.3.2:

 voir le graphe nomdedomaine:

 pour la question 2.1.3.3:


pour la question 2.1.3.4:
En observant le trafic UDP , j'ai filtré avec la commande "udp && !dns && !quic", pour voir quel autre protocol je peux avoir. J'ai fais en sorte de ne pas filtrer
les protocoles QUIC et DNS . Je suis tombé sur des protocles UDP classiques et des protocoles STUN.
Certains paquets utilisent  UDP et sont envoyés de l'adress IP locale 192.168.1.42 vers une adresse multicast 239.255.255.250 .
D'autres paquets utilisent le protocole STUN , protocol qui permet à des appareils derrière un NAT de découvrir leur adresse IP publique et le type de NAT auquel ils sont soumis.

pour la question 2.1.4.1:

Oui elles sont sécurisés , les protocoles comme TLS de DNS ou HTTPS : chiffrent les requêtes DNS
on peut filtrer avec "tls.handshake.type" montre tous les paquets impliqués dans le handshake TLS.
Ou pour vérifier la présence des certificats échangés on peut utiliser la commande "tls.handshake.certificates"
Par exemple pour le paquet n°35 grâce au filtrage on peut voir que son paquet contient l'information :
"Certificate, Server Key Exchange, Server Hello Done" : le serveur envoie son certificat au client pour qu'il le vérifie. Le certificat contient la clé publique du serveur .
Le certifact status nous informe que le serveur envoie des infos sur le statut du certificat, comme par exemple OCSP qui confirme que le confirme le certificat du serveur est toujours valide.
Il y a une étape importante c est le server key exchange , changer la clé pour le chiffrement des données
Le "Server Hello Done " indique la fin des messages Hello du serveur , ensuite le client répondra avec ses propres messages pour continuer la négociation TLS



pour la question 2.1.4.2:
J'ai majoritairement du TLSv1.3 mais aussi du TLSv1.2
Pour les protocoles de sécurité les paquets utilisent : SERVER HELLO et CLIENT HELLO

pour la question 2.1.4.3 :
pour voir la durée de vie nous devons analyser les validités des certificats : sur mon wireshark je peux voir le "notBefore" est à utcTime: 2021-04-14 00:00:00 (UTC)
et le "notAfter" est à  utcTime: 2031-04-13 23:59:59 (UTC)
Ils sont certifiés par DigiCert : "https://www.digicert.com/" (US)

pour la question  2.1.4.4:

répondre par rapport au cours

pour la question 2.1.5. voir à la fin pour cette question





(ip.addr == 192.168.1.61 || ip.addr == 192.168.1.56) && ip.addr == 162.159.135.234



quand nous nous connectons avec un smartphone sur dropbox ,
nous pouvons voir dans le paquet "wifi_application.pcapng" que l'adresse ip du téléphone est présente
en même temps que celle du pc. Avec le téléphone, nous avons upload une image .

Nous avons remarqué qu'il y a eu le même déroulement que pour le pc. C est à dire que l'adresse ip du téléphone a envoyé

Au début nous avons le protocole MDNS : il y a des demandes de requêtes pour l'adresse IPv4 et IPv6 du téléphone.
une requête aux serveurs de dropbox pour télécharger l'image.
Ensuite les serveurs dropbox ont avertis les différents appareils connectés qu'il y avait une nouveau fichier sur le drive.
Il n'y a pas vraiment d'impacte sur le réseau mise à part qu'il y a eu une augmentation de résolution de protocole car nous avons 2 appareils sur le même réseau.
Nous avons plus de résolution de protocole "ARP" , par exemple.
En utilisant le filtre "DNS" nous pouvons constater , on peut voir que Dropbox utilise des serveurs relais pour interagir abec les utilisateurs.
Les CName et les adresses IP identifiées pointent vers une infrastructue conçue pour optimiser le contenu que l'user va livrer et sa sécurité.

